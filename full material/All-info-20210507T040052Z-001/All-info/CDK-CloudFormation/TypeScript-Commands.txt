#After Cloud9 env creation use these commands
#Below command already installed so it will display error
#npm install -g aws-cdk
cdk --version
mkdir workshop-typescript
cd workshop-typescript/
cdk init app --language=typescript

 * `npm run build`   compile typescript to js
 * `npm run watch`   watch for changes and compile
 * `npm run test`    perform the jest unit tests
 * `cdk deploy`      deploy this stack to your default AWS account/region
 * `cdk diff`        compare deployed stack with current state
 * `cdk synth`       emits the synthesized CloudFormation template


npm install @aws-cdk/core@1.101.0 @aws-cdk/cx-api@1.100.0 @aws-cdk/cloud-assembly-schema@1.101.0  @aws-cdk/region-info@1.101.0
npm install @aws-cdk/aws-s3




ec2-user:~/environment/workshop-typescript (master) $ aws configure
AWS Access Key ID [****************FTJX]: AKIAUGHL7RABSHE
AWS Secret Access Key [****************Yefv]: w0icJanu+YfbXMPVQ7XGoeRuQy7W29Y
Default region name [us-east-1]: 
Default output format [None]: 

#Refresh Browser and choos Force Update Credintials

cdk bootstrap

cdk diff

cdk deploy

#For cleanup comment the code in /bin/..

cdk diff
cdk deploy

#Note: s3 bucket will not destroy as need to seet delete permission


*********************************************************************************
import * as cdk from '@aws-cdk/core'
import * as s3 from '@aws-cdk/aws-s3'


export class WorkshopTypescriptStack extends cdk.Stack {
  constructor(scope: cdk.Construct, id: string, props?: cdk.StackProps) {
    super(scope, id, props);

    const bucket = new s3.Bucket(this, 'cdkbucket', {versioned:true})
    
    const another_bucket = new s3.Bucket(this, 'anothercdkbucket', {versioned:false})
    
    // The code that defines your stack goes here
  }
}
*********************************************************************************





